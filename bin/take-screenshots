#!/usr/bin/env perl
use strict;
use warnings;

use Path::Class qw(file);
use WWW::Selenium;
use WWW::Selenium::Util qw/server_is_running/;

unless (server_is_running) {
    die "Please start a Selenium server first.\n";
}

use Getopt::Long;
my $RT      = 'http://localhost:8008';
my $output  = $ENV{PWD};
GetOptions(
    'url=s'     => \$RT,
    'output=s'  => \$output,
);

unless ($RT) {
    die "Usage: $0 --url http://localhost:8008 --output .\n";
}

# Convert output to absolute path for selenium
$output = file($output)->absolute;

# title|path -> [title, path]
my @pages = map  { [ split /\|/, $_, 2 ] }
            grep { not /^#/ and /\S/ }
            map  { chomp; $_ }
                 <DATA>;

my $firefox = WWW::Selenium->new( browser_url => $RT );
$firefox->start;
$firefox->open($RT);

# Login
print "Logging in\n";
$firefox->type('name=user', 'jesse');
$firefox->type('name=pass', 'password');
$firefox->submit('id=login');

# Resize to something reasonable
resize_window($firefox, 975, 400);

# Save the subscription so we see it on the homepage
for my $subscribe (grep { $_->[1] =~ /Dashboards\/Subscription/ } @pages) {
    print "Saving Dashboard subscription\n";
    $firefox->open($RT . $subscribe->[1]);
    $firefox->click('Save');
}

# Mock up the create ticket page
{
    $firefox->open("$RT/Ticket/Create.html?Queue=Office");
    $firefox->select('Object-RT::Ticket--CustomField-1-Values', 'Filterfresh');
    $firefox->type('Subject', 'Office has run out of coffee!');
    $firefox->wait_for_element_present('id=cke_Content', 10000);
    $firefox->run_script(<<"    .");
        CKEDITOR.instances.Content.setData(
            "<p><b>The worst has happened.</b></p>"
          + "<p style='color: red; font-size: xx-large;'>There is no coffee to be found anywhere in the office.</p>"
          + "<p>Productivity is at an <u>all-time low</u>!</p>"
        );
    .
    $firefox->pause(1000);

    print "Screenshotting ticket_create\n";
    $firefox->capture_entire_page_screenshot("$output/ticket_create.png");
}

my $resized = 0;

# Capture the pages we want
for my $page (@pages) {
    my ($title, $url) = @$page;

    print "Screenshotting $title\n";
    $firefox->open("$RT$url");

    if ($url =~ m{^/m/} and not $resized) {
        resize_window($firefox, 416, 400);
        $resized = 1;
    }

    $firefox->capture_entire_page_screenshot("$output/$title.png");
}

$firefox->stop;


sub resize_window {
    my ($window, $w, $h) = @_;
    $window->run_script("window.moveTo(0,0); window.resizeTo($w, $h);");
    $window->pause(1000);
}

__DATA__
homepage|/index.html
ticket_basics|/Ticket/Display.html?id=1
ticket_history|/Ticket/History.html?id=1
search_results|/Search/Results.html?Query=id+<+4;Order=DESC
search_bulk_update|/Search/Bulk.html?Query=id+<+4;Order=DESC
ticket_relationships|/Ticket/Graphs/index.html?id=1&Direction=LR&LeadingLink=DependsOn&MaxDepth=0&ShowLinks=MemberOf&ShowLinks=RefersTo&FillUsing=&Level-1-Properties=Subject&Level-1-Properties=Status&Level-2-Properties=Subject&Level-2-Properties=Status&Level-3-Properties=Subject&Level-3-Properties=Status&Update=Update+Graph&SavedSearchId=new&SavedSearchOwner=RT::User-12&SavedSearchDescription=&SavedSearchLoad=
dashboard|/Dashboards/10/SLA+Performance
dashboard_subscription|/Dashboards/Subscription.html?id=10
theme_editor|/Admin/Tools/Theme.html
admin_rights_editor|/Admin/Global/GroupRights.html
# Once we hit a mobile page, we resize to a smaller window.  Only mobile pages
# should be below this line.
mobile|/m/
mobile_ticket_basics|/m/ticket/show?id=1
